interface FooterProps {
  pendingTasksCount: number;
  inProgressTasksCount: number;
  completedTasksCount: number;
}

const getEncouragementMessage = ({
  pendingTasksCount,
  inProgressTasksCount,
  completedTasksCount,
}: FooterProps): string => {
  // 1. KhÃ´ng cÃ³ task nÃ o
  if (
    pendingTasksCount === 0 &&
    inProgressTasksCount === 0 &&
    completedTasksCount === 0
  ) {
    return "ðŸŒŸ You have no tasks right now. Perfect time to relax or plan something new!";
  }

  // 2. Chá»‰ cÃ³ pending
  if (
    pendingTasksCount > 0 &&
    inProgressTasksCount === 0 &&
    completedTasksCount === 0
  ) {
    return `âœ¨ Let's get started! You have ${pendingTasksCount} pending ${
      pendingTasksCount === 1 ? "task" : "tasks"
    } waiting for you.`;
  }

  // 3. Chá»‰ cÃ³ in-progress
  if (
    pendingTasksCount === 0 &&
    inProgressTasksCount > 0 &&
    completedTasksCount === 0
  ) {
    return `âš¡ Youâ€™re working on ${inProgressTasksCount} ${
      inProgressTasksCount === 1 ? "task" : "tasks"
    }. Stay focused and keep going!`;
  }

  // 4. Chá»‰ cÃ³ completed
  if (
    pendingTasksCount === 0 &&
    inProgressTasksCount === 0 &&
    completedTasksCount > 0
  ) {
    return `ðŸŽ‰ Awesome! You completed ${
      completedTasksCount === 1 ? "a task" : `${completedTasksCount} tasks`
    } already! Time to celebrate your progress.`;
  }

  // 5. CÃ³ completed + (pending hoáº·c inprogress)
  if (
    completedTasksCount > 0 &&
    (pendingTasksCount > 0 || inProgressTasksCount > 0)
  ) {
    let msg = `ðŸŽ‰ Great job! Youâ€™ve completed ${completedTasksCount} ${
      completedTasksCount === 1 ? "task" : "tasks"
    } so far.`;

    const details: string[] = [];
    if (pendingTasksCount > 0) {
      details.push(
        `${pendingTasksCount} pending ${
          pendingTasksCount === 1 ? "task" : "tasks"
        }`
      );
    }
    if (inProgressTasksCount > 0) {
      details.push(
        `${inProgressTasksCount} in-progress ${
          inProgressTasksCount === 1 ? "task" : "tasks"
        }`
      );
    }

    msg += ` You still have ${details.join(" and ")} to go. Keep it up! ðŸ’ª`;
    return msg;
  }

  // 6. CÃ³ pending + inprogress nhÆ°ng chÆ°a completed
  if (
    pendingTasksCount > 0 &&
    inProgressTasksCount > 0 &&
    completedTasksCount === 0
  ) {
    return `ðŸš€ Youâ€™ve got ${pendingTasksCount} pending ${
      pendingTasksCount === 1 ? "task" : "tasks"
    } and ${inProgressTasksCount} in-progress ${
      inProgressTasksCount === 1 ? "task" : "tasks"
    }. Letâ€™s tackle them one by one!`;
  }

  // fallback
  return "Keep going! Every step you take brings you closer to your goals. ðŸŒŸ";
};

const Footer = ({
  pendingTasksCount,
  inProgressTasksCount,
  completedTasksCount,
}: FooterProps) => {
  return (
    <div className="text-center">
      <p className="text-sm text-gray-200 font-medium">
        {getEncouragementMessage({
          pendingTasksCount,
          inProgressTasksCount,
          completedTasksCount,
        })}
      </p>
    </div>
  );
};

export default Footer;